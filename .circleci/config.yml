version: 2

references:
  circleci_docker_primary_tf12: &circleci_docker_primary_tf12 trussworks/circleci-docker-primary:tf12-86954077a1d6587de6c636ed6163001fd0575d87

jobs:
  validate:
    docker:
      - image: *circleci_docker_primary_tf12
    steps:
      - checkout
      - restore_cache:
          keys:
            - pre-commit-dot-cache-{{ checksum ".pre-commit-config.yaml" }}
      - run:
          name: Run pre-commit tests
          command: pre-commit run --all-files
      - run: curl -sfL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s -- -b $(go env GOPATH)/bin v1.21.0
      - save_cache:
          key: pre-commit-dot-cache-{{ checksum ".pre-commit-config.yaml" }}
          paths:
            - ~/.cache

  terratest-tf12:
    docker:
      - image: *circleci_docker_primary_tf12
    steps:
      - checkout
      - restore_cache:
          keys:
            - go-mod-sources-v1-{{ checksum "go.sum" }}
      - run:
          name: Assume role
          command: |
            export AWS_ACCESS_KEY_ID=$test_AWS_ACCESS_KEY_ID && \
            export AWS_SECRET_ACCESS_KEY=$test_AWS_SECRET_ACCESS_KEY && \
            temp_role=$(aws sts assume-role \
                    --role-arn arn:aws:iam::170446316504:role/circleci \
                    --role-session-name circleci)
            export AWS_ACCESS_KEY_ID=$(echo $temp_role | jq .Credentials.AccessKeyId | xargs)
            export AWS_SECRET_ACCESS_KEY=$(echo $temp_role | jq .Credentials.SecretAccessKey | xargs)
            export AWS_SESSION_TOKEN=$(echo $temp_role | jq .Credentials.SessionToken | xargs)
      - run:
          name: Run terratest
          command: go test -v ./test/...
      - save_cache:
          key: go-mod-sources-v1-{{ checksum "go.sum" }}
          paths:
            - "~/go/pkg/mod"

workflows:
  version: 2
  validate:
    jobs:
      - validate
      - terratest-tf12
